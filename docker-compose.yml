version: "3"

services:
  frontend:
    container_name: frontend
    build:
      context: game/frontend
    env_file: .env
    user: root
    volumes:
      # - nginx:/usr/share/nginx/html
      - ./game/frontend/src:/usr/share/nginx/html
      - ./game/frontend/conf/nginx.conf:/etc/nginx/nginx.conf
    # ports:
    #   - 4242:4242
    restart: always
    networks:
      - network
    depends_on:
      - backend
  backend:
    container_name: backend
    env_file: .env
    user: 1000:1000
    build: 
      context: game/backend
    # command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      # - oauth2intra:/code
      - ./game/backend:/code
    ports:
      - 6969:6969
    networks:
      - network
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 6969
  oauth2intra:
    container_name: oauth2
    env_file: .env
    user: 1000:1000
    build: 
      context: oauth2intra
    # command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      # - oauth2intra:/code
      - ./oauth2intra:/code
    # ports:
    #   - 8000:8000
    networks:
      - network
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - 8000
  nginx:
    container_name: nginx
    build:
      context: nginx
    env_file: .env
    user: root
    volumes:
      # - nginx:/usr/share/nginx/html
      - ./nginx/root:/usr/share/nginx/html
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/playpong.duckdns.org/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/playpong.duckdns.org/privkey.pem:/etc/nginx/ssl/privkey.pem
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - network
    depends_on:
      - postgres
      - oauth2intra
  postgres:
    container_name: postgres
    build:
      context: postgres
    env_file: .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - network
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432

volumes:
  # oauth2intra:
  # nginx:
  postgres_data:

# for development
# volumes:
#   oauth2intra:
#     name: oauth2intra
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: oauth2intra
#   nginx:
#     name: nginx
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: nginx/root
#   postgres_data:
#     name: postgres

networks:
  network:
    driver: bridge