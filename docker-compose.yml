version: "3.8"

services:
# MICROSERVICE API-GATEWAY
  api_gateway:
    env_file: .env
    container_name: api_gateway
    build:
      context: ms_api_gateway
      args:
        CURRENT_HOST: ${CURRENT_HOST}
    volumes:
      - ./ms_api_gateway/root:/usr/share/nginx/html
      - ./ms_api_gateway/nginx.conf.template:/nginx.conf.template
      - ./.cert/:/etc/nginx/ssl/
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - network
    depends_on:
      - auth_backend
      - users_db
      - frontend
      - game_chat_backend
      - game_chat_db

# MICROSERVICE FRONTEND
  frontend:
    env_file: .env
    container_name: frontend
    build: 
      context: ms_frontend
    volumes:
      - ./ms_frontend/root://usr/share/nginx/html
      - ./ms_frontend/nginx.conf.template:/nginx.conf.template
    networks:
      - network
    depends_on:
      - game_chat_backend
    restart: always
    expose:
      - 4242

# MICROSERVICE AUTH
  auth_backend:
    env_file: .env
    container_name: auth_backend
    build: 
      context: ms_auth
    volumes:
      - ./ms_auth:/code
    networks:
      - network
    restart: always
    depends_on:
      users_db:
        condition: service_healthy
    expose:
      - 8000
  users_db:
    container_name: users_db
    build:
      context: postgres
    user: postgres
    env_file: .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 3s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - network
    volumes:
      - users_db:/var/lib/postgresql/data/
    expose:
      - 5432

# MICROSERVICE GAME_CHAT
  game_chat_backend:
    env_file: .env
    container_name: game_chat_backend
    build: 
      context: ms_game_chat/backend
    volumes:
      - ./ms_game_chat/backend:/code
    networks:
      - network
    restart: always
    depends_on:
      game_chat_db:
        condition: service_healthy
    expose:
      - 6969
  game_chat_db:
    container_name: game_chat_db
    build:
      context: postgres
    user: postgres
    env_file: .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      interval: 3s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - network
    volumes:
      - game_chat_db:/var/lib/postgresql/data/
    expose:
      - 5432

volumes:
  game_chat_db:
  users_db:

networks:
  network:
    driver: bridge